<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

<!--#######################################################################################################################################-->
<!--include the helpers with fixed parameters-->
<!--#######################################################################################################################################-->
  <xacro:include filename="$(find diy_robotarm_wer24_description)/urdf/materials.urdf.xacro" />
  <xacro:include filename="$(find diy_robotarm_wer24_description)/urdf/common.urdf.xacro" />


<!--#######################################################################################################################################-->
<!--set some parameters with default values used by the macros (kinematics description, simulation and control)-->
<!--#######################################################################################################################################-->

  <xacro:macro name="diy_robotarm" params="
    name
    tf_prefix
    parent
    *origin
    joint_limits_parameters_file 
    kinematics_parameters_file
    generate_ros2_control_tag:=true
    use_fake_hardware:=false
    fake_sensor_commands:=false
    initial_positions:=${dict(shoulder=0.0,upper_arm=0.0,forearm=0.0,wrist_1=0.0,wrist_2=0.0,wrist_3=0.0)}
    robot_ip
    robot_ssid"
  >

<!--#######################################################################################################################################-->
<!--load configuration data from config/xxx.yaml files with the read_model_macro specified in helpers.xacro-->  
<!--#######################################################################################################################################-->
    <xacro:read_model_data
      joint_limits_parameters_file="${joint_limits_parameters_file}"
      kinematics_parameters_file="${kinematics_parameters_file}"
    />


  <!--#######################################################################################################################################-->
  <!--include ros2 control and create an instance if param generate_ros2_control_tag == true and pass necessary params-->
  <!--#######################################################################################################################################-->

    <xacro:if value="${generate_ros2_control_tag}">
        <!-- ros2 control include -->
        <xacro:include filename="$(find diy_robotarm_wer24_description)/urdf/diy_robotarm.ros2_control.urdf.xacro" />
        <!-- ros2 control instance -->
        <xacro:wer24_ros2_control
          name="${name}"
          use_fake_hardware="${use_fake_hardware}"
          initial_positions="${initial_positions}"
          fake_sensor_commands="${fake_sensor_commands}"
          tf_prefix="${tf_prefix}"
          robot_ip="${robot_ip}"
          robot_ssid="${robot_ssid}"
        />
    </xacro:if>

<!--#######################################################################################################################################-->
<!--define the main kinematic chain with links and joints (using the config-files)-->
<!--#######################################################################################################################################-->
    <xacro:materials tf_prefix="${tf_prefix}"/>

    <!-- Achse fix Base to parent passed in the main_urdf.xacro-->
    <joint name="${tf_prefix}robotarm_to_parent" type="fixed">
        <parent link="${parent}"/>
        <child link="${tf_prefix}base_link"/>
    </joint>

    <!-- Link0 = Basecone -->
    <link name="${tf_prefix}base_link">
      <origin xyz="0 0 0"/>
      <visual>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/visual/base.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}grey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/collision/base.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}red"/>
      </collision>
    </link>

    <!-- Achse 1 (Base = World)-->
    <joint name="${tf_prefix}shoulder" type="revolute">
      <origin xyz="${shoulder_x} ${shoulder_y} ${shoulder_z}" rpy="${shoulder_roll} ${shoulder_pitch} ${shoulder_yaw}"/> 
      <parent link="${tf_prefix}base_link"/>
      <child link="${tf_prefix}link_1"/>
      <axis xyz="0.0 0.0 1.0"/>
      <limit lower="${shoulder_lower_limit}" upper="${shoulder_upper_limit}" velocity="${shoulder_velocity_limit}" effort="${shoulder_effort_limit}"/> 
    </joint>

    <!-- Link1 = Shoulder -->
    <link name="${tf_prefix}link_1">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/> <!--this transformations are defined local on this reference set-->
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/visual/link_1.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}grey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy = "0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/collision/link_1.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}red"/>
      </collision>
    </link>

    <!-- Achse 2 -->
    <joint name="${tf_prefix}upper_arm" type="revolute">
      <origin xyz="${upper_arm_x} ${upper_arm_y} ${upper_arm_z}" rpy="${upper_arm_roll} ${upper_arm_pitch} ${upper_arm_yaw}"/> 
      <parent link="${tf_prefix}link_1"/>
      <child link="${tf_prefix}link_2"/>
      <axis xyz="0.0 0.0 1.0"/>
      <limit lower="${upper_arm_lower_limit}" upper="${upper_arm_upper_limit}" velocity="${upper_arm_velocity_limit}" effort="${upper_arm_effort_limit}"/> 
    </joint>

    <!-- Link2 = Upper_Arm -->
    <link name="${tf_prefix}link_2">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/visual/link_2.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}grey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy = "0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/collision/link_2.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}red"/>
      </collision>
    </link>

    <!-- Achse 3 -->
    <joint name="${tf_prefix}forearm" type="revolute">
      <origin xyz="${forearm_x} ${forearm_y} ${forearm_z}" rpy="${forearm_roll} ${forearm_pitch} ${forearm_yaw}"/> 
      <parent link="${tf_prefix}link_2"/>
      <child link="${tf_prefix}link_3"/>
      <axis xyz="0.0 0.0 1.0"/>
      <limit lower="${forearm_lower_limit}" upper="${forearm_upper_limit}" velocity="${forearm_velocity_limit}" effort="${forearm_effort_limit}"/> 
    </joint>

    <!-- Link3 = Forearm -->
    <link name="${tf_prefix}link_3">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/visual/link_3.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}grey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy = "0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/collision/link_3.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}red"/>
      </collision>
    </link>

    <!-- Achse 4 -->
    <joint name="${tf_prefix}wrist_1" type="revolute">
      <origin xyz="${wrist_1_x} ${wrist_1_y} ${wrist_1_z}" rpy="${wrist_1_roll} ${wrist_1_pitch} ${wrist_1_yaw}"/> 
      <parent link="${tf_prefix}link_3"/>
      <child link="${tf_prefix}link_4"/>
      <axis xyz="0.0 0.0 1.0"/>
      <limit lower="${wrist_1_lower_limit}" upper="${wrist_1_upper_limit}" velocity="${wrist_1_velocity_limit}" effort="${wrist_1_effort_limit}"/> 
    </joint>

    <!-- Link4 = Wrist 1 -->
    <link name="${tf_prefix}link_4">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/visual/link_4.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}grey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy = "0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/collision/link_4.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}red"/>
      </collision>
    </link>

    <!-- Achse 5 -->
    <joint name="${tf_prefix}wrist_2" type="revolute">
      <origin xyz="${wrist_2_x} ${wrist_2_y} ${wrist_2_z}" rpy="${wrist_2_roll} ${wrist_2_pitch} ${wrist_2_yaw}"/> 
      <parent link="${tf_prefix}link_4"/>
      <child link="${tf_prefix}link_5"/>
      <axis xyz="0.0 0.0 1.0"/>
      <limit lower="${wrist_2_lower_limit}" upper="${wrist_2_upper_limit}" velocity="${wrist_2_velocity_limit}" effort="${wrist_2_effort_limit}"/> 
    </joint>

    <!-- Link5 = Wrist 2 -->
    <link name="${tf_prefix}link_5">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/visual/link_5.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}grey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy = "0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/collision/link_5.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}red"/>
      </collision>
    </link>

    <!-- Achse 6 -->
    <joint name="${tf_prefix}wrist_3" type="revolute">
      <origin xyz="${wrist_3_x} ${wrist_3_y} ${wrist_3_z}" rpy="${wrist_3_roll} ${wrist_3_pitch} ${wrist_3_yaw}"/> 
      <parent link="${tf_prefix}link_5"/>
      <child link="${tf_prefix}link_6"/>
      <axis xyz="0.0 0.0 1.0"/>
      <limit lower="${wrist_3_lower_limit}" upper="${wrist_3_upper_limit}" velocity="${wrist_3_velocity_limit}" effort="${wrist_3_effort_limit}"/> 
    </joint>

    <!-- Link6 = Flange -->
    <link name="${tf_prefix}link_6">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/visual/link_6.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}grey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy = "0 0 0"/>
        <geometry>
          <mesh filename="package://diy_robotarm_wer24_description/meshes/collision/link_6.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="${tf_prefix}red"/>
      </collision>
    </link>
  
  </xacro:macro>
</robot>
